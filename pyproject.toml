[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fastapi-pacer"
version = "0.2.0"
description = "Production-ready rate limiter for FastAPI with GCRA algorithm"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Dan", email = "dan@example.com"}
]
keywords = ["fastapi", "rate-limiting", "gcra", "redis", "middleware"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.109.0",
    "redis[hiredis]>=5.0.0",
    "pydantic>=2.0.0",
    "starlette>=0.35.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-redis>=3.0.0",
    "httpx>=0.25.0",
    "uvicorn[standard]>=0.24.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "coverage[toml]>=7.3.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/dan/fastapi-pacer"
Documentation = "https://github.com/dan/fastapi-pacer"
Repository = "https://github.com/dan/fastapi-pacer"
Issues = "https://github.com/dan/fastapi-pacer/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
pacer = ["lua/*.lua", "py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src/pacer"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "E501",  # line too long (handled by black)
]

[tool.ruff.lint.isort]
known-first-party = ["pacer"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true